// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Feedback {
  id          Int       @id @default(autoincrement())
  title       String
  description String
  category    String
  status      String    @default("suggestion")
  // upvotes     Int       @default(0)
  author      User      @relation(fields: [authorId], references: [id])
  authorId    Int
  comments    Comment[]
  upvotes     Upvote[]
}

model Comment {
  id                  Int       @id @default(autoincrement())
  content             String
  feedbackId          Int
  feedback            Feedback  @relation(fields: [feedbackId], references: [id])
  replyingToUserId    Int?
  replyingToUser      User?     @relation("replyToUser", fields: [replyingToUserId], references: [id])
  replyingToCommentId Int?
  replyingToComment   Comment?  @relation("replies", fields: [replyingToCommentId], references: [id])
  author              User      @relation(fields: [authorId], references: [id])
  authorId            Int
  replies             Comment[] @relation("replies")
}

model User {
  id              Int        @id @default(autoincrement())
  image           String
  name            String     @unique
  username        String     @unique
  feedbacks       Feedback[]
  comments        Comment[]
  repliedComments Comment[]  @relation("replyToUser")
  upvotes         Upvote[]
}

model Upvote {
  id         Int      @id @default(autoincrement())
  feedbackId Int
  feedback   Feedback @relation(fields: [feedbackId], references: [id])
  userId     Int
  user       User     @relation(fields: [userId], references: [id])

  @@unique([userId, feedbackId], name: "userId_feedbackId") // <-- this is the unique constraint
  @@index([feedbackId])
  @@index([userId])
  @@map("upvotes")
}
